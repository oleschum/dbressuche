# Deploy workflow
# Builds the application for windows and ubuntu and creates distributable. Then creates a new
#   Github release with the tag name and uploads the distributables to the release.
#   Runs only on "v*" tags like "v1.0.0".
name: deploy

on:
  push:
    tags:
      - v*.*.*
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: tagname
        uses: olegtarasov/get-tag@v2.1.2

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10.6

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Pyinstaller windows_build_folder
        run: pyinstaller --clean --noconfirm specs/windows_build_folder.spec

      - name: Chocolatey install innosetup
        uses: crazy-max/ghaction-chocolatey@v2.1.0
        with:
          # Arguments to pass to Chocolatey
          args: install innosetup --install-arguments="'/DIR=../innosetup'" --force

      - name: Run Innosetup Windows
        # Run innosetup and set application version to git tag
        run: C:\ProgramData\chocolatey\bin\ISCC.exe specs/windows_inno_setup.iss /DApplicationVersion=${{ env.GIT_TAG_NAME }}

      - name: Store windows installer as build artifact
        uses: actions/upload-artifact@v3
        with:
          name: DBReservierungsSucheSetup-windows-installer
          path: installers/DBReservierungsSucheSetup.exe

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: tagname
        uses: olegtarasov/get-tag@v2.1.2

      - name: Install libEGL1
        run: sudo apt install libegl1

      - name: Install XCB deps
        run: sudo apt-get install --reinstall libxcb-xinerama0 libxkbcommon0 libxkbcommon-x11-0 '^libxcb.*-dev' libx11-xcb-dev libglu1-mesa-dev libxrender-dev libxi-dev libxkbcommon-dev libxkbcommon-x11-dev

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10.6

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Pyinstaller run linux_build_folder
        run: pyinstaller --clean --noconfirm specs/linux_build_folder.spec

      - name: Zip Dist Folder
        uses: thedoctor0/zip-release@0.7.1
        with:
          directory: dist
          path: DeutscheBahnReservierungssuche
          filename: DBReservierungsSucheUbuntu.zip
      - name: Store ubuntu build artifact
        uses: actions/upload-artifact@v3
        with:
          name: DBReservierungsSuche-ubuntu
          path: dist/DBReservierungsSucheUbuntu.zip

  release:
    runs-on: ubuntu-latest
    needs: [build-windows, build-linux]
    permissions: write-all
    steps:
      - name: Download build files
        uses: actions/download-artifact@v3
      - uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            DBReservierungsSucheSetup-windows-installer/DBReservierungsSucheSetup.exe
            DBReservierungsSuche-ubuntu/DBReservierungsSucheUbuntu.zip